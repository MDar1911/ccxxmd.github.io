<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[PHP简要回顾(上)]]></title>
      <url>http://ccxxmd.github.io/2017/04/17/PHP_re1/</url>
      <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=5179544&auto=0&height=66"></iframe><br>复习一下PHP吧。PP虾，我们走！<br><a id="more"></a></p>
<h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="if-else-循环"><a href="#if-else-循环" class="headerlink" title="if..else 循环"></a>if..else 循环</h3><h4 id="只有用到-if-条件"><a href="#只有用到-if-条件" class="headerlink" title="只有用到 if 条件"></a>只有用到 if 条件</h4><p>只用到 if 条件，当作单纯的判断。解释成 “若发生了某事则怎样处理”。语法如下： </p>
<blockquote>
<p> if (expr) { statement }</p>
</blockquote>
<p>其中的 expr 为判断的条件，通常都是用逻辑运算符号当判断的条件。而 statement 为符合条件的执行部分程序，若程序只有一行，可以省略大括号 {}。 </p>
<p>范例：本例省略大括号。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;?php </div><div class="line"></div><div class="line">if ($state==1) echo &quot;哈哈&quot; ; </div><div class="line"></div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>这里特别注意的是，判断是否相等是==而不是=，= 是赋值。 </p>
<p>范例：本例的执行部分有三行，不可省略大括号。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;?php </div><div class="line"></div><div class="line">if ($state==1) &#123; </div><div class="line"></div><div class="line">echo &quot;哈哈 ; </div><div class="line"></div><div class="line">echo &quot;&lt;br&gt;&quot; ; </div><div class="line"></div><div class="line">&#125; </div><div class="line"></div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<h4 id="除了-if-之外，加上了-else-的条件。"><a href="#除了-if-之外，加上了-else-的条件。" class="headerlink" title="除了 if 之外，加上了 else 的条件。"></a>除了 if 之外，加上了 else 的条件。</h4><p>除了 if 之外，加上了 else 的条件，可解释成“若发生了某事则怎样处理，否则改如何处理”。语法如下</p>
<blockquote>
<p>if (expr) { statement1 } else { statement2 }</p>
</blockquote>
<p> 范例：上面的例子来修改成更完整的处理。其中的 else 由于只有一行执行的指令，因此不用加上大括号。 </p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">if ($state==1) &#123; </div><div class="line"></div><div class="line">echo &quot;哈哈&quot; ; </div><div class="line"></div><div class="line">echo &quot;&lt;br&gt;&quot;;</div><div class="line"></div><div class="line">&#125; </div><div class="line"></div><div class="line">else&#123;</div><div class="line"></div><div class="line">echo &quot;呵呵&quot;;</div><div class="line"></div><div class="line">echo &quot;&lt;br&gt;&quot;; </div><div class="line"></div><div class="line">&#125; </div><div class="line"></div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<h4 id="递归的-if-else-循环"><a href="#递归的-if-else-循环" class="headerlink" title="递归的 if..else 循环"></a>递归的 if..else 循环</h4><p>递归的 if..else 循环，通常用在多种决策判断时。它将数个 if..else 拿来合并运用处理。 </p>
<p>直接看下面的例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;?php </div><div class="line"></div><div class="line">if ( $a &gt; $b ) &#123; </div><div class="line"></div><div class="line">echo &quot;a 比 b 大&quot; ; </div><div class="line"></div><div class="line">&#125; elseif ( $a == $b ) &#123; </div><div class="line"></div><div class="line">echo &quot;a 等于 b&quot; ; </div><div class="line"></div><div class="line">&#125; else &#123; </div><div class="line"></div><div class="line">echo &quot;a 比 b 小&quot; ; </div><div class="line"></div><div class="line">&#125; </div><div class="line"></div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>上例只用二层的 if..else 循环，用来比较 a 和 b 两个变量。实际要使用这种递归 if..else 循环时，要小心使用，因为太多层的循环容易使设计的逻辑出问题，或者少打了大括号等，都会造成程序出现莫名其妙的问题。 </p>
<h3 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h3><p>for 循环就单纯只有一种，没有变化，它的语法如下 </p>
<blockquote>
<p>for (expr1; expr2; expr3) { statement }</p>
</blockquote>
<p>其中的 expr1 为条件的初始值。expr2 为判断的条件，通常都是用逻辑运算符号 (logical operators) 当判断的条件。expr3 为执行 statement 后要执行的部份，</p>
<p>用来改变条件，供下次的循环判断，如加一..等等。而 statement 为符合条件的执行部分程序，若程序只有一行，可以省略大括号 {}。 </p>
<p>下例是用 for 循环写的的例子。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;?php </div><div class="line"></div><div class="line">for ( $i = 1 ; $i &lt;= 10 ; $i ++) &#123; </div><div class="line"></div><div class="line">echo &quot;这是第&quot;.$i.&quot;次循环&lt;br&gt;&quot; ; </div><div class="line"></div><div class="line">&#125; </div><div class="line"></div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<h3 id="switch-循环"><a href="#switch-循环" class="headerlink" title="switch 循环"></a>switch 循环</h3><p>switch 循环，通常处理复合式的条件判断，每个子条件，都是 case 指令部分。在实作上若使用许多类似的 if 指令，可以将它综合成 switch 循环。 </p>
<p>语法如下 </p>
<blockquote>
<p>switch (expr) {  case expr1:  statement1;  break; </p>
<p>case expr2:  statement2; break;</p>
<p>default:  statementN;  break; }</p>
</blockquote>
<p>其中的 expr 条件，通常为变量名称。而 case 后的 exprN，通常表示变量值。冒号后则为符合该条件要执行的部分。注意要用 break 跳离循环。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">&lt;?php </div><div class="line"></div><div class="line">switch ( date ( &quot;D&quot; )) &#123; </div><div class="line"></div><div class="line">case &quot;Mon&quot; : </div><div class="line">echo &quot;今天星期一&quot; ; </div><div class="line">break; </div><div class="line"></div><div class="line">case &quot;Tue&quot; : </div><div class="line">echo &quot;今天星期二&quot; ; </div><div class="line">break; </div><div class="line"></div><div class="line">case &quot;Wed&quot; : </div><div class="line">echo &quot;今天星期三&quot; ; </div><div class="line">break; </div><div class="line"></div><div class="line">case &quot;Thu&quot; : </div><div class="line">echo &quot;今天星期四&quot; ; </div><div class="line">break; </div><div class="line"></div><div class="line">case &quot;Fri&quot; : </div><div class="line">echo &quot;今天星期五&quot; ; </div><div class="line">break; </div><div class="line"></div><div class="line">default: </div><div class="line">echo &quot;今天放假&quot; ; </div><div class="line">break; </div><div class="line"></div><div class="line">&#125; </div><div class="line"></div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>这里需要注意的是break;别遗漏了，default，省略是可以的。 </p>
<p>很明显的，上述的例子用 if 循环就很麻烦了。在设计时，要将出现机率最大的条件放在最前面，最少出现的条件放在最后面，可以增加程序的执行效率。</p>
<p>上例由于每天出现的机率相同，所以不用注意条件的顺序。 </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo-GitHub Page博客绑定域名]]></title>
      <url>http://ccxxmd.github.io/2017/03/04/Blog_domainname/</url>
      <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1695569&auto=0&height=66"></iframe>

<blockquote>
<p>这是我的的第一个技(shui)术(tie)文章，多多包涵，欢迎大家在评论中指出错误</p>
</blockquote>
<a id="more"></a>
<blockquote>
<p>(本文只针对基于hexo框架搭建的GitHub Page)</p>
</blockquote>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>首先说一下为什么要为GitHub Page绑定域名，如今越来越多的技术人员甚至是个人都会使用GitHub Page搭建个人博客或者展示网站，自己设计好的个人站希望推广或者让朋友们访问时却苦于GitHub Page的网址冗长难记。</p>
<p><strong>所以，在这个时候，你需要为你的GitHub Page绑定一个精简易记的域名</strong></p>
<h3 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h3><ol>
<li>一个已经搭建好的基于hexo框架的GitHub Page博客</li>
<li>一台已有完整环境mac或pc</li>
<li>一个自己喜欢域名</li>
</ol>
<p>在这里以腾讯云购买的域名为栗子(为什么我要用腾讯云？因为便宜！)</p>
<p><a href="http://bbs.qcloud.com/thread-21113-1-1.html" title="腾讯云-一元扶持 1元=免费域名+专享服务器" target="_blank" rel="external">腾讯云-一元扶持 1元=免费域名+专享服务器</a></p>
<p>腾讯云的“云+校园计划”非常给力，在你毕业之前的 域名+服务器 只需每个月1元，合计每年12元，优惠到没朋友啊。(我真的没有在打广告= =，可能其他云服务产品也有差不多的优惠，只是我没去了解)<br>虽然现在域名也不算贵，但是这里优惠针对学生确实很大，毕竟学生嘛，勤俭节约是应该滴</p>
<h3 id="准备好之后就进入正题"><a href="#准备好之后就进入正题" class="headerlink" title="准备好之后就进入正题"></a>准备好之后就进入正题</h3><ol>
<li>首先进入自己的本地 <strong><em>hexo博客根目录-&gt;source</em></strong> 文件夹，新建一个空后缀的名为 <strong><em>CNAME</em></strong> 的文件</li>
</ol>
<p><img src="http://ww1.sinaimg.cn/large/88253132gy1fdbtd79pe7j20n60amdgy" alt=""></p>
<p><br>2. 使用文本编辑程序往里面输入自己购买的域名，例如我购买的域名为<br><a href="http://ccxxmd.me/" title="ccxxmd.me" target="_blank" rel="external">ccxxmd.me</a>(也欢迎各位客官经常来本人的小站看看哦)</p>
<p><img src="http://ww1.sinaimg.cn/large/88253132gy1fdbti7ho1nj20ae05m3ym" alt=""></p>
<p><br>3. 进入腾讯云主站，登录自己的个人账号，进入“域名管理”选项，在这里你可以看到自己已经购买到的域名<br><br><img src="http://ww1.sinaimg.cn/large/88253132gy1fdbv2jhux2j21kw0ewq64" alt=""><br><br>4. 点击如上图红圈圈中的 <strong>解析</strong> 按钮进入域名解析页面<br><br><img src="http://ww1.sinaimg.cn/large/88253132gy1fdbv7z9pdaj21iu0jun18" alt=""><br><br>5. 可以看到，在记录类型里面有3列，如果你的页面中已经有两个Ade记录类型就直接添加一条 <strong>CNAME</strong> 记录，主机记录为 <em>www</em> 记录纸为你自己的原始GitHub Page网址，如我的就是<a href="https://ccxxmd.github.io" title="ccxxmd.github.io">ccxxmd.github.io</a><br><br>6. 设置完毕之后就可以git bash自己的hexo目录了，键入 <code>hexo g</code> 生成和 <code>hexo d</code> 提交你的GitHub Page<br>或者使用简写命令 <code>hexo d -g</code> 直接生成并且提交到GitHub上<br><br>7. 最后一步，打开浏览器键入自己的自定域名，然后你就可以看到自己的blog出现在眼前了！<br><br>(倘若不能加载出来那就等一段时间过后再试一次吧)<br><strong>如果出现GItHub-404的错误，这个时候你就要去检查自己的GitHub Page的代码仓库是否有 <em>CNAME</em> 文件上传成功，存放位置是否正确，CNAME文件内容是否无误，耐心点，一定可以成功的！</strong></p>
<p>参考：<br><a href="https://www.zhihu.com/question/31377141" title="github怎么绑定自己的域名？" target="_blank" rel="external">github怎么绑定自己的域名？</a></p>
<blockquote>
<p><strong>第一次这么正式得写文章呢，好紧张，难免有错请各位海涵，如果你有什么疑问或者建议欢迎在下发评论指出哦。</strong></p>
</blockquote>
]]></content>
    </entry>
    
  
  
</search>
